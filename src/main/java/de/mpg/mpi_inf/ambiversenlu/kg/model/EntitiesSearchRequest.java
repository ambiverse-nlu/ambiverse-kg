/*
 * Knowledge Graph Web Service
 * The Knowledge Graph Web Service lets you find entities and categories in the knowledge graph. This service is particularly suited to be run as a second step after the NLU Service has been used for linking ambiguous names in natural-language texts to entities. With this service, you can now explore these entities further.
 *
 * OpenAPI spec version: v2
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package de.mpg.mpi_inf.ambiversenlu.kg.model;

import java.util.Objects;

import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import io.swagger.v3.oas.annotations.media.Schema;
import java.math.BigDecimal;
import javax.validation.constraints.*;

/**
 * EntitiesSearchRequest
 */
@javax.annotation.Generated(value = "io.swagger.codegen.v3.generators.java.JavaJerseyServerCodegen", date = "2019-10-24T12:54:00.720Z[GMT]")
public class EntitiesSearchRequest   {
  @JsonProperty("latitude")
  @JsonInclude(JsonInclude.Include.NON_NULL)
  private BigDecimal latitude = null;

  @JsonProperty("longitude")
  @JsonInclude(JsonInclude.Include.NON_NULL)
  private BigDecimal longitude = null;

  @JsonProperty("distance")
  @JsonInclude(JsonInclude.Include.NON_NULL)
  private BigDecimal distance = null;

  public EntitiesSearchRequest latitude(BigDecimal latitude) {
    this.latitude = latitude;
    return this;
  }

  /**
   * The latitude of a point of interest.
   * @return latitude
   **/
  @JsonProperty("latitude")
  @Schema(example = "49.257792", required = true, description = "The latitude of a point of interest.")
  @NotNull
  @JsonInclude(JsonInclude.Include.NON_NULL)
  public BigDecimal getLatitude() {
    return latitude;
  }

  public void setLatitude(BigDecimal latitude) {
    this.latitude = latitude;
  }

  public EntitiesSearchRequest longitude(BigDecimal longitude) {
    this.longitude = longitude;
    return this;
  }

  /**
   * The longitude of a point of interest.
   * @return longitude
   **/
  @JsonProperty("longitude")
  @Schema(example = "7.046052", required = true, description = "The longitude of a point of interest.")
  @NotNull
  @JsonInclude(JsonInclude.Include.NON_NULL)
  public BigDecimal getLongitude() {
    return longitude;
  }

  public void setLongitude(BigDecimal longitude) {
    this.longitude = longitude;
  }

  public EntitiesSearchRequest distance(BigDecimal distance) {
    this.distance = distance;
    return this;
  }

  /**
   * The distance (in kilometers) to the point of interest in which to search for entities.
   * @return distance
   **/
  @JsonProperty("distance")
  @Schema(example = "2", required = true, description = "The distance (in kilometers) to the point of interest in which to search for entities.")
  @NotNull
  @JsonInclude(JsonInclude.Include.NON_NULL)
  public BigDecimal getDistance() {
    return distance;
  }

  public void setDistance(BigDecimal distance) {
    this.distance = distance;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    EntitiesSearchRequest entitiesSearchRequest = (EntitiesSearchRequest) o;
    return Objects.equals(this.latitude, entitiesSearchRequest.latitude) &&
            Objects.equals(this.longitude, entitiesSearchRequest.longitude) &&
            Objects.equals(this.distance, entitiesSearchRequest.distance);
  }

  @Override
  public int hashCode() {
    return Objects.hash(latitude, longitude, distance);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class EntitiesSearchRequest {\n");

    sb.append("    latitude: ").append(toIndentedString(latitude)).append("\n");
    sb.append("    longitude: ").append(toIndentedString(longitude)).append("\n");
    sb.append("    distance: ").append(toIndentedString(distance)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }
}
